$retina-dpi: 144dpi;
$retina-dppx: 1.5dppx;

$cubic-bezier-almost-done-at-half: cubic-bezier(0.27, 0.69, 0.26, 0.96);
$cubic-bezier-follow-through-after-half: cubic-bezier(0.6, -0.25, 0.34, 1.51);

@mixin retina {
  @media (min-resolution: $retina-dpi), (min-resolution: $retina-dppx) {
    @content;
  }
}

@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin list-reset {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin btn-reset {
  padding: 0;
  margin: 0;
  background: none;
  border: none;
  cursor: pointer;
  outline: none;

  &:focus {
    outline: none;
  }
}

@mixin hover {
  &:hover {
    opacity: 0.8;
  }

  &:focus {
    outline: none;
    opacity: 0.7;
  }
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin gpu-animation {
  will-change: transform;
}

@mixin accent-animation($duration, $delay, $rate, $step, $orders...) {
  .accent-line span {
    animation: bounce-in-up #{$rate * $duration} ease #{$delay} both;
  }

  @for $lineNumber from 1 through length($orders) {
    $lineOrders: nth($orders, $lineNumber);

    @for $letterNumber from 1 through length($lineOrders) {
      $letterOrder: nth($lineOrders, $letterNumber);

      .accent-line:nth-child(#{$lineNumber}) span:nth-child(#{$letterNumber}) {
        animation-delay: $delay + $rate * $step * $letterOrder;
      }
    }
  }
}
